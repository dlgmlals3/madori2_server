swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"      
host: "http://218.38.52.30"
basePath: "/2"
schemes:
- "https"
- "http"
paths:
  /room:
    get:
      tags:
      - "room"
      summary: "room list"
      description: "Get room list"
      operationId: "operationId"
      parameters: 
        - name : "room"
          in : "path"
          description: "path" 
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      -api_key: []
    
    
    post:
      tags:
      - "room create"
      summary: "Create room"
      description: "create room"
      produces:
      - "application/json"
      parameters:
      - name: "room"
        in: "body"
        description: "room schema object"
        required: true
        schema:
          type: json
          required:
            - title
          properties:
            title: 
              type: string
            ageMin:
              type: string
            ageMax:
              type: string
            regDate:
              type: string
            place:
              type: string
            gender:
              type: string
            price:
              type: string
            openUrl:
              type: string
            intro:
              type: string
            maxMemberNum:
              type: string
            registDate:
              type: string
            createrId:
              type: string
        responses:
          200:
            description: "successful operation"
          400:
            description: "Invalid Order"



  /room/{roomId}:
    get:
      tags:
      - "room/roomId"
      summary: "Get only one room(comming soon)"
      description: "Get only one room"
      produces:
      - "applivation/json"
      parameters: 
      - name : "roomId"
        in : "path"
        description: "roomId" 
        required: true
        schema:
          type: json
          required:
            - title
          properties:
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"
    put:
      tags:
      - "room/roomId"
      summary: "Update only one room"
      description: "Update only one room"
      produces:
      - "application/json"
      parameters:
      - name : "roomId"
        in : "path"
        description: "roomId of creater" 
        required: true
      - name : "room info"
        in : "body"
        description: "room infomation"
        schema:
          type: json
          required:
            - title
          properties:
            title: 
              type: string
            ageMin:
              type: string
            ageMax:
              type: string
            regDate:
              type: string
            place:
              type: string
            gender:
              type: string
            price:
              type: string
            openUrl:
              type: string
            intro:
              type: string
            maxMemberNum:
              type: string
            registDate:
              type: string
            createrId:
              type: string

      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"

    delete:
      tags:
      - "room/roomId"
      summary: "Delete only one room(comming soon)"
      description: "Delete only one room"
      produces:
      - "application/json"
      parameters:
      - name: "roomId"
        in: "query"
        description: "roomId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"

  
  /room/list/{keyword}:
    get:
      tags:
      - "room search"
      summary: "rooms search(comming soon)"
      description: "Rooms search"
      produces:
      - "application/json"
      parameters:
      - name: keyword
        in: query
        description: "keyword"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"


  /member/requester-room/:roomId:
    get:
      tags:
      - "member"
      summary: "my requested room(comming soon)"
      description: "My requested room"
      produces:
      - "application/json"
      parameters:
      - name: roomId
        in: query
        description: "roomId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"


  /room/requester-room:
    post:
      tags:
      - "room/requester-room"
      summary: "join room(?)(comming soon)"
      description: "join room(?)"
      produces:
      - "application/json"
      parameters:
      - name: userId
        in: body
        description: "requester-room"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"


  /room/requster-room/{memberId}:
    get:
      tags:
      - "room/requester-room"
      summary: "requested room(comming soon)"
      description: "requested room"
      produces:
      - "application/json"
      parameters:
      - name: memberId
        in: query
        description: "memberId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"

    delete:
      tags:
      - "room/requester-room"
      summary: "requested cancle(comming soon)"
      description: "requested delete"
      produces:
      - "application/json"
      parameters:
      - name: memberId
        in: body
        description: "memberId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"


  /member:
    post:
      tags:
      - "member"
      summary: "Member insert(comming soon)"
      description: "Member insert"
      produces:
      - "application/json"
      parameters:
      - name: memberId
        in: body
        description: "memberId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"

  /getUserInfo/{userId}:
    get:
      tags:
      - "UserInfo"
      summary: "get user infomaiton(comming soon)"
      description: "Get user infomation"
      produces:
      - "application/json"
      parameters:
      - name: userId
        in: query
        description: "userId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"

  /room/isExistMyroom/{memberId}:
    get:
      tags:
      - "room"
      summary: "ins Exist my room(comming soon)"
      description: "is Exist my room"
      produces:
      - "application/json"
      parameters:
      - name: memberId
        in: query
        description: "memberId"
        required: true
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Order"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
